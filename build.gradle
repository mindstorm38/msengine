/*

	-- MS Engine (MSE) --

*/

apply plugin: 'java-library'
apply plugin: 'eclipse'

import org.gradle.internal.os.OperatingSystem
import org.apache.tools.ant.filters.ReplaceTokens

switch ( OperatingSystem.current() ) {
	case OperatingSystem.WINDOWS:
		project.ext.lwjglNatives = "natives-windows"
		break
	case OperatingSystem.LINUX:
		project.ext.lwjglNatives = "natives-linux"
		break
	case OperatingSystem.MAC_OS:
		project.ext.lwjglNatives = "natives-macos"
		break
}

project.ext.lwjglVersion = "3.1.6"
project.ext.jomlVersion = "1.9.6"
project.ext.guavaVersion = "23.2-jre"
project.ext.gsonVersion = "2.8.2"
project.ext.nettyVersion = "4.1.17.Final"

version = "0.0.1"

repositories {
	jcenter()
	mavenCentral()
}

dependencies {
	compile "org.lwjgl:lwjgl:$lwjglVersion"
	compile "org.lwjgl:lwjgl-glfw:$lwjglVersion"
	compile "org.lwjgl:lwjgl-jemalloc:$lwjglVersion"
	compile "org.lwjgl:lwjgl-nanovg:$lwjglVersion"
	compile "org.lwjgl:lwjgl-nfd:$lwjglVersion"
	compile "org.lwjgl:lwjgl-nuklear:$lwjglVersion"
	compile "org.lwjgl:lwjgl-openal:$lwjglVersion"
	compile "org.lwjgl:lwjgl-opengl:$lwjglVersion"
	compile "org.lwjgl:lwjgl-par:$lwjglVersion"
	compile "org.lwjgl:lwjgl-stb:$lwjglVersion"
	compile "org.lwjgl:lwjgl-tinyfd:$lwjglVersion"
	compile "org.lwjgl:lwjgl-vulkan:$lwjglVersion"
	runtime "org.lwjgl:lwjgl:$lwjglVersion:$lwjglNatives"
	runtime "org.lwjgl:lwjgl-glfw:$lwjglVersion:$lwjglNatives"
	runtime "org.lwjgl:lwjgl-jemalloc:$lwjglVersion:$lwjglNatives"
	runtime "org.lwjgl:lwjgl-nanovg:$lwjglVersion:$lwjglNatives"
	runtime "org.lwjgl:lwjgl-nfd:$lwjglVersion:$lwjglNatives"
	runtime "org.lwjgl:lwjgl-nuklear:$lwjglVersion:$lwjglNatives"
	runtime "org.lwjgl:lwjgl-openal:$lwjglVersion:$lwjglNatives"
	runtime "org.lwjgl:lwjgl-opengl:$lwjglVersion:$lwjglNatives"
	runtime "org.lwjgl:lwjgl-par:$lwjglVersion:$lwjglNatives"
	runtime "org.lwjgl:lwjgl-stb:$lwjglVersion:$lwjglNatives"
	runtime "org.lwjgl:lwjgl-tinyfd:$lwjglVersion:$lwjglNatives"
	compile "org.joml:joml:${jomlVersion}"
	compile "com.google.guava:guava:${guavaVersion}"
	compile "com.google.code.gson:gson:${gsonVersion}"
	compile "io.netty:netty-all:${nettyVersion}"
	compile project(":sutil")
}

processResources {
   filter ReplaceTokens, tokens:[version: project.version]
}
