/*

	-- MS Engine (MSE) --

	Java   : 1.8
	Gradle : 6.0

*/

plugins {
	id 'java'
	id 'eclipse'
}

import org.gradle.internal.os.OperatingSystem
import org.apache.tools.ant.filters.ReplaceTokens

switch ( OperatingSystem.current() ) {
	case OperatingSystem.WINDOWS:
		project.ext.currentOs = 'windows'
		break
	case OperatingSystem.LINUX:
		project.ext.currentOs = 'linux'
		break
	case OperatingSystem.MAC_OS:
		project.ext.currentOs = 'macos'
		break
}

def DIST_LIST = ["windows", "linux", "macos"]
def LWJGL_NATIVES_LIST = ["windows": "natives-windows", "linux": "natives-linux", "macos": "natives-macos"]

project.ext.lwjglVersion = '3.1.6'
project.ext.lwjglNativesForCurrentOs = LWJGL_NATIVES_LIST.get(project.ext.currentOs)
project.ext.jomlVersion = '1.9.6'
project.ext.guavaVersion = '23.2-jre'
project.ext.gsonVersion = '2.8.2'
project.ext.nettyVersion = '4.1.17.Final'


version '0.0.1'
description 'MSE (MS Engine)'

sourceCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

repositories {
	
	jcenter()
	mavenCentral()

}

configurations {
	natives.extendsFrom runtime
}

dependencies {

	compile "org.lwjgl:lwjgl:$lwjglVersion"
	compile "org.lwjgl:lwjgl-glfw:$lwjglVersion"
	compile "org.lwjgl:lwjgl-jemalloc:$lwjglVersion"
	compile "org.lwjgl:lwjgl-openal:$lwjglVersion"
	compile "org.lwjgl:lwjgl-opengl:$lwjglVersion"
	compile "org.lwjgl:lwjgl-stb:$lwjglVersion"
	runtime "org.lwjgl:lwjgl:$lwjglVersion:$lwjglNativesForCurrentOs"
	runtime "org.lwjgl:lwjgl-glfw:$lwjglVersion:$lwjglNativesForCurrentOs"
	runtime "org.lwjgl:lwjgl-jemalloc:$lwjglVersion:$lwjglNativesForCurrentOs"
	runtime "org.lwjgl:lwjgl-openal:$lwjglVersion:$lwjglNativesForCurrentOs"
	runtime "org.lwjgl:lwjgl-opengl:$lwjglVersion:$lwjglNativesForCurrentOs"
	runtime "org.lwjgl:lwjgl-stb:$lwjglVersion:$lwjglNativesForCurrentOs"
	compile "org.joml:joml:${jomlVersion}"
	compile "com.google.guava:guava:${guavaVersion}"
	compile "com.google.code.gson:gson:${gsonVersion}"
	compile "io.netty:netty-all:${nettyVersion}"

	compile project(":sutil")
	
	LWJGL_NATIVES_LIST.values().each { lwjglnat ->
		natives "org.lwjgl:lwjgl:$lwjglVersion:$lwjglnat"
		natives "org.lwjgl:lwjgl-glfw:$lwjglVersion:$lwjglnat"
		natives "org.lwjgl:lwjgl-jemalloc:$lwjglVersion:$lwjglnat"
		natives "org.lwjgl:lwjgl-openal:$lwjglVersion:$lwjglnat"
		natives "org.lwjgl:lwjgl-opengl:$lwjglVersion:$lwjglnat"
		natives "org.lwjgl:lwjgl-stb:$lwjglVersion:$lwjglnat"
	}

}

processResources {
	
	filesNotMatching("**/*.png") {
		
		it.filter([tokens: [
				version: project.version
		]], ReplaceTokens)
		
	}
	
}